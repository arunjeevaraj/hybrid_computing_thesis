t = 0 : .1 : 2*pi;
f = 2;        %1 Hz
y = sin(t.*f) + 1;

%figure(1);

% To make the figure axis, text and annotations 
% proportional to the text in the document in latex.
% for IEEE paper, width is important.
% the height is calculated with the golden aspect ration = 1.618.
x0  = 3.487;
y0 = width / 1.618;

% to correct the dimensions of the figure.s
figure('Units', 'inches', ...
'Position', [x0 y0 width height], ...
'PaperPositionMode', 'auto');

% the plot function.
plot(t,y);

%correct the scale
axis([0 t(end) 0 7])
set(gca, ...
'Units', 'normalized', ...
'YTick', -2:.5:7.5, ...
'XTick', 0:t(end)/8:t(end), ...
'Position', [.15 .2 .75 .7], ...
'FontUnits', 'points', ...
'FontWeight', 'normal', ...
'FontSize', 9 , ...
'FontName', 'Times');

% changing the interpretor for the axises as latex
ylabel({'$y(t)$'}, ...
  'FontUnits','points', ...
  'interpreter', 'latex', ...
  'FontSize', 9, ...
  'FontName','Times');

xlabel('Time(s)', ...
    'FontUnits', 'points',...
    'FontWeight','normal',...
    'FontSize',7,...
    'FontName', 'Times');

legend({'$y=\sin(t)$'}, ...
    'FontUnits', 'points', ...
    'interpreter', 'latex', ...
    'FontSize', 7, ...
    'FontName', 'Times', ...
    'Location', 'NorthEast');

title('Sinusoidal function', ...
    'FontUnits', 'points', ...
    'FontWeight', 'normal', ...
    'FontSize', 7 ,...
    'FontName','Times');

% save plot as eps file
% other options 
% -deps .eps black and white -depsc .eps color
% -deps2 .eps level 2 black and white
% -depsc2 .eps level 2 color 
% -dpdf .pdf color file format

print -depsc2 myplot.eps
